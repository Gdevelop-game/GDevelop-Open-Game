var gdjs;(function(s){let r;(function(c){let l;(function(o){const a=new s.Logger("Audio events");o.getGlobalVolume=function(t){return t.getScene().getSoundManager().getGlobalVolume()},o.setGlobalVolume=function(t,e){t.getScene().getSoundManager().setGlobalVolume(e)},o.unloadAllAudio=function(t){t.getScene().getSoundManager().unloadAll()},o.playSound=function(t,e,n,i,g){t.getScene().getSoundManager().playSound(e,n,i,g)},o.playSoundOnChannel=function(t,e,n,i,g,u){t.getScene().getSoundManager().playSoundOnChannel(e,n,i,g,u)},o.stopSoundOnChannel=function(t,e){const n=t.getScene().getSoundManager().getSoundOnChannel(e);n?n.stop():a.error(`Cannot stop non-existing sound on channel ${e}.`)},o.pauseSoundOnChannel=function(t,e){const n=t.getScene().getSoundManager().getSoundOnChannel(e);n?n.pause():a.error(`Cannot pause non-existing sound on channel ${e}.`)},o.continueSoundOnChannel=function(t,e){const n=t.getScene().getSoundManager().getSoundOnChannel(e);n?n.playing()||n.play():a.error(`Cannot continue playing non-existing sound on channel ${e}.`)},o.isSoundOnChannelPlaying=function(t,e){const n=t.getScene().getSoundManager().getSoundOnChannel(e);return n?n.playing():!1},o.isSoundOnChannelPaused=function(t,e){const n=t.getScene().getSoundManager().getSoundOnChannel(e);return n?n.paused():(a.error(`Cannot check if non-existing sound on channel ${e} is paused.`),!1)},o.isSoundOnChannelStopped=function(t,e){const n=t.getScene().getSoundManager().getSoundOnChannel(e);return n?n.stopped():(a.error(`Cannot check if non-existing sound on channel ${e} is stopped.`),!0)},o.getSoundOnChannelVolume=function(t,e){const n=t.getScene().getSoundManager().getSoundOnChannel(e);return n?n.getVolume()*100:(a.error(`Cannot get the volume of a non-existing sound on channel ${e}.`),100)},o.setSoundOnChannelVolume=function(t,e,n){const i=t.getScene().getSoundManager().getSoundOnChannel(e);i?i.setVolume(n/100):a.error(`Cannot set the volume of a non-existing sound on channel ${e}.`)},o.getSoundOnChannelPlayingOffset=function(t,e){const n=t.getScene().getSoundManager().getSoundOnChannel(e);return n?n.getSeek():(a.error(`Cannot get the playing offset of a non-existing sound on channel ${e}.`),0)},o.setSoundOnChannelPlayingOffset=function(t,e,n){const i=t.getScene().getSoundManager().getSoundOnChannel(e);i?i.setSeek(n):a.error(`Cannot set the playing offset of a non-existing sound on channel ${e}.`)},o.getSoundOnChannelPitch=function(t,e){const n=t.getScene().getSoundManager().getSoundOnChannel(e);return n?n.getRate():(a.error(`Cannot get the pitch of a non-existing sound on channel ${e}.`),1)},o.setSoundOnChannelPitch=function(t,e,n){const i=t.getScene().getSoundManager().getSoundOnChannel(e);i?i.setRate(n):a.error(`Cannot get the pitch of a non-existing sound on channel ${e}.`)},o.preloadSound=(t,e)=>t.getScene().getSoundManager().loadAudio(e,!1),o.unloadSound=(t,e)=>t.getScene().getSoundManager().unloadAudio(e,!1),o.playMusic=function(t,e,n,i,g){t.getScene().getSoundManager().playMusic(e,n,i,g)},o.playMusicOnChannel=function(t,e,n,i,g,u){t.getScene().getSoundManager().playMusicOnChannel(e,n,i,g,u)},o.stopMusicOnChannel=function(t,e){const n=t.getScene().getSoundManager().getMusicOnChannel(e);n?n.stop():a.error(`Cannot stop a non-existing music on channel ${e}.`)},o.pauseMusicOnChannel=function(t,e){const n=t.getScene().getSoundManager().getMusicOnChannel(e);n?n.pause():a.error(`Cannot pause a non-existing music on channel ${e}.`)},o.continueMusicOnChannel=function(t,e){const n=t.getScene().getSoundManager().getMusicOnChannel(e);n?n.playing()||n.play():a.error(`Cannot stop a non-existing music on channel ${e}.`)},o.isMusicOnChannelPlaying=function(t,e){const n=t.getScene().getSoundManager().getMusicOnChannel(e);return n?n.playing():!1},o.isMusicOnChannelPaused=function(t,e){const n=t.getScene().getSoundManager().getMusicOnChannel(e);return n?n.paused():(a.error(`Cannot check if non-existing music on channel ${e} is paused.`),!1)},o.isMusicOnChannelStopped=function(t,e){const n=t.getScene().getSoundManager().getMusicOnChannel(e);return n?n.stopped():(a.error(`Cannot check if non-existing music on channel ${e} is stopped.`),!0)},o.getMusicOnChannelVolume=function(t,e){const n=t.getScene().getSoundManager().getMusicOnChannel(e);return n?n.getVolume()*100:(a.error(`Cannot get the volume of a non-existing music on channel ${e}.`),100)},o.setMusicOnChannelVolume=function(t,e,n){const i=t.getScene().getSoundManager().getMusicOnChannel(e);i?i.setVolume(n/100):a.error(`Cannot set the volume of a non-existing music on channel ${e}.`)},o.getMusicOnChannelPlayingOffset=function(t,e){const n=t.getScene().getSoundManager().getMusicOnChannel(e);return n?n.getSeek():(a.error(`Cannot get the playing offset of a non-existing music on channel ${e}.`),0)},o.setMusicOnChannelPlayingOffset=function(t,e,n){const i=t.getScene().getSoundManager().getMusicOnChannel(e);i?i.setSeek(n):a.error(`Cannot set the playing offset of a non-existing music on channel ${e}.`)},o.getMusicOnChannelPitch=function(t,e){const n=t.getScene().getSoundManager().getMusicOnChannel(e);return n?n.getRate():(a.error(`Cannot get the pitch of a non-existing music on channel ${e}.`),1)},o.setMusicOnChannelPitch=function(t,e,n){const i=t.getScene().getSoundManager().getMusicOnChannel(e);i?i.setRate(n):a.error(`Cannot get the pitch of a non-existing music on channel ${e}.`)},o.preloadMusic=(t,e)=>t.getScene().getSoundManager().loadAudio(e,!0),o.unloadMusic=(t,e)=>t.getScene().getSoundManager().unloadAudio(e,!0),o.fadeSoundVolume=(t,e,n,i)=>{const g=t.getScene().getSoundManager().getSoundOnChannel(e);g?g.fade(g.getVolume(),n/100,i*1e3):a.error(`Cannot fade the volume of a non-existing sound on channel ${e}.`)},o.fadeMusicVolume=(t,e,n,i)=>{const g=t.getScene().getSoundManager().getMusicOnChannel(e);g?g.fade(g.getVolume(),n/100,i*1e3):a.error(`Cannot fade the volume of a non-existing music on channel ${e}.`)}})(l=c.sound||(c.sound={}))})(r=s.evtTools||(s.evtTools={}))})(gdjs||(gdjs={}));
//# sourceMappingURL=soundtools.js.map
