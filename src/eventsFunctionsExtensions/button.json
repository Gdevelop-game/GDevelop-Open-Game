{
  "author": "Paulo Amaral (@paulera)",
  "category": "",
  "extensionNamespace": "",
  "fullName": "Button",
  "helpPath": "",
  "iconUrl": "",
  "name": "Button",
  "previewIconUrl": "",
  "shortDescription": "Allows a Sprite to behave as a clickable button and optionally to be activated via keyboard.",
  "version": "1.0",
  "description": "Allows a Sprite to behave as a clickable button and optionally to be activated via keyboard.",
  "tags": [
    "button",
    "click",
    "mouse",
    "key"
  ],
  "authorIds": [],
  "dependencies": [],
  "eventsFunctions": [],
  "eventsBasedBehaviors": [
    {
      "description": "Interactive button that can be activated using the mouse or touch.",
      "fullName": "Interactive button",
      "name": "InteractiveButton",
      "objectType": "Sprite",
      "eventsFunctions": [
        {
          "fullName": "",
          "functionType": "Action",
          "name": "onCreated",
          "sentence": "",
          "events": [
            {
              "type": "BuiltinCommonInstructions::Comment",
              "color": {
                "b": 109,
                "g": 230,
                "r": 255,
                "textB": 0,
                "textG": 0,
                "textR": 0
              },
              "comment": "Set the initial state of ClickCaptured:\n-1 = No capture whatsoever\n0 = The click started outside the object\n1 = The click started on the object"
            },
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [],
              "actions": [
                {
                  "type": {
                    "value": "ModVarObjet"
                  },
                  "parameters": [
                    "Object",
                    "ClickCaptured",
                    "=",
                    "-1"
                  ]
                }
              ]
            }
          ],
          "parameters": [
            {
              "description": "Object",
              "name": "Object",
              "supplementaryInformation": "Sprite",
              "type": "object"
            },
            {
              "description": "Behavior",
              "name": "Behavior",
              "supplementaryInformation": "Button::InteractiveButton",
              "type": "behavior"
            }
          ],
          "objectGroups": []
        },
        {
          "fullName": "",
          "functionType": "Action",
          "name": "doStepPreEvents",
          "sentence": "",
          "events": [
            {
              "type": "BuiltinCommonInstructions::Comment",
              "color": {
                "b": 109,
                "g": 230,
                "r": 255,
                "textB": 0,
                "textG": 0,
                "textR": 0
              },
              "comment": "If the behaviour have names set for the animation to use for various button states, apply it."
            },
            {
              "colorB": 228,
              "colorG": 176,
              "colorR": 74,
              "creationTime": 0,
              "name": "Animation set",
              "source": "",
              "type": "BuiltinCommonInstructions::Group",
              "events": [
                {
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "inverted": true,
                        "value": "Button::InteractiveButton::PropertyENABLED"
                      },
                      "parameters": [
                        "Object",
                        "Behavior"
                      ]
                    }
                  ],
                  "actions": [],
                  "events": [
                    {
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [
                        {
                          "type": {
                            "value": "StrEqual"
                          },
                          "parameters": [
                            "Object.Behavior::PropertyANIMATION_DISABLED()",
                            "!=",
                            "\"\""
                          ]
                        }
                      ],
                      "actions": [
                        {
                          "type": {
                            "value": "SetAnimationName"
                          },
                          "parameters": [
                            "Object",
                            "Object.Behavior::PropertyANIMATION_DISABLED()"
                          ]
                        },
                        {
                          "type": {
                            "value": "ModVarObjet"
                          },
                          "parameters": [
                            "Object",
                            "ClickCaptured",
                            "=",
                            "-1"
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "value": "Button::InteractiveButton::PropertyENABLED"
                      },
                      "parameters": [
                        "Object",
                        "Behavior"
                      ]
                    }
                  ],
                  "actions": [],
                  "events": [
                    {
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [
                        {
                          "type": {
                            "value": "StrEqual"
                          },
                          "parameters": [
                            "Object.Behavior::PropertyANIMATION_UP()",
                            "!=",
                            "\"\""
                          ]
                        }
                      ],
                      "actions": [
                        {
                          "type": {
                            "value": "SetAnimationName"
                          },
                          "parameters": [
                            "Object",
                            "Object.Behavior::PropertyANIMATION_UP()"
                          ]
                        }
                      ]
                    },
                    {
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [
                        {
                          "type": {
                            "value": "Button::InteractiveButton::isHover"
                          },
                          "parameters": [
                            "Object",
                            "Behavior",
                            ""
                          ]
                        },
                        {
                          "type": {
                            "value": "StrEqual"
                          },
                          "parameters": [
                            "Object.Behavior::PropertyANIMATION_OVER()",
                            "!=",
                            "\"\""
                          ]
                        }
                      ],
                      "actions": [
                        {
                          "type": {
                            "value": "SetAnimationName"
                          },
                          "parameters": [
                            "Object",
                            "Object.Behavior::PropertyANIMATION_OVER()"
                          ]
                        }
                      ]
                    },
                    {
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [
                        {
                          "type": {
                            "value": "Button::InteractiveButton::isDown"
                          },
                          "parameters": [
                            "Object",
                            "Behavior",
                            ""
                          ]
                        },
                        {
                          "type": {
                            "value": "StrEqual"
                          },
                          "parameters": [
                            "Object.Behavior::PropertyANIMATION_DOWN()",
                            "!=",
                            "\"\""
                          ]
                        }
                      ],
                      "actions": [
                        {
                          "type": {
                            "value": "SetAnimationName"
                          },
                          "parameters": [
                            "Object",
                            "Object.Behavior::PropertyANIMATION_DOWN()"
                          ]
                        }
                      ]
                    }
                  ]
                }
              ],
              "parameters": []
            },
            {
              "type": "BuiltinCommonInstructions::Comment",
              "color": {
                "b": 109,
                "g": 230,
                "r": 255,
                "textB": 0,
                "textG": 0,
                "textR": 0
              },
              "comment": "If there is no click captured but there was a touch, set ClickCaptured to indicate if it happened outside the object (0) or inside the object (1)"
            },
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "value": "VarObjet"
                  },
                  "parameters": [
                    "Object",
                    "ClickCaptured",
                    "=",
                    "-1"
                  ]
                },
                {
                  "type": {
                    "value": "SourisBouton"
                  },
                  "parameters": [
                    "",
                    "Left"
                  ]
                },
                {
                  "type": {
                    "value": "Button::InteractiveButton::PropertyENABLED"
                  },
                  "parameters": [
                    "Object",
                    "Behavior"
                  ]
                }
              ],
              "actions": [],
              "events": [
                {
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "value": "SourisSurObjet"
                      },
                      "parameters": [
                        "Object",
                        "",
                        "",
                        ""
                      ]
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "value": "ModVarObjet"
                      },
                      "parameters": [
                        "Object",
                        "ClickCaptured",
                        "=",
                        "1"
                      ]
                    }
                  ]
                },
                {
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "inverted": true,
                        "value": "SourisSurObjet"
                      },
                      "parameters": [
                        "Object",
                        "",
                        "",
                        ""
                      ]
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "value": "ModVarObjet"
                      },
                      "parameters": [
                        "Object",
                        "ClickCaptured",
                        "=",
                        "0"
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "parameters": [
            {
              "description": "Object",
              "name": "Object",
              "supplementaryInformation": "Sprite",
              "type": "object"
            },
            {
              "description": "Behavior",
              "name": "Behavior",
              "supplementaryInformation": "Button::InteractiveButton",
              "type": "behavior"
            }
          ],
          "objectGroups": []
        },
        {
          "description": "Trigger after a button was clicked and released",
          "fullName": "Clicked and released (full click)",
          "functionType": "Condition",
          "name": "isClicked",
          "sentence": "_PARAM0_ was clicked with mouse/touch",
          "events": [
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [],
              "actions": [
                {
                  "type": {
                    "value": "SetReturnBoolean"
                  },
                  "parameters": [
                    "False"
                  ]
                }
              ]
            },
            {
              "type": "BuiltinCommonInstructions::Comment",
              "color": {
                "b": 109,
                "g": 230,
                "r": 255,
                "textB": 0,
                "textG": 0,
                "textR": 0
              },
              "comment": "A full click is considered when it was started on the object (ClickCaptured ==1), and the mouse is released on the object."
            },
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "value": "SourisSurObjet"
                  },
                  "parameters": [
                    "Object",
                    "",
                    "yes",
                    ""
                  ]
                },
                {
                  "type": {
                    "value": "MouseButtonReleased"
                  },
                  "parameters": [
                    "",
                    "Left"
                  ]
                },
                {
                  "type": {
                    "value": "VarObjet"
                  },
                  "parameters": [
                    "Object",
                    "ClickCaptured",
                    "=",
                    "1"
                  ]
                },
                {
                  "type": {
                    "value": "Button::InteractiveButton::PropertyENABLED"
                  },
                  "parameters": [
                    "Object",
                    "Behavior"
                  ]
                }
              ],
              "actions": [
                {
                  "type": {
                    "value": "SetReturnBoolean"
                  },
                  "parameters": [
                    "True"
                  ]
                }
              ]
            }
          ],
          "parameters": [
            {
              "description": "Object",
              "name": "Object",
              "supplementaryInformation": "Sprite",
              "type": "object"
            },
            {
              "description": "Behavior",
              "name": "Behavior",
              "supplementaryInformation": "Button::InteractiveButton",
              "type": "behavior"
            }
          ],
          "objectGroups": []
        },
        {
          "description": "Trigger when the cursor is over the button",
          "fullName": "Mouse is over",
          "functionType": "Condition",
          "name": "isHover",
          "sentence": "Cursor is over _PARAM0_",
          "events": [
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [],
              "actions": [
                {
                  "type": {
                    "value": "SetReturnBoolean"
                  },
                  "parameters": [
                    "False"
                  ]
                }
              ]
            },
            {
              "type": "BuiltinCommonInstructions::Comment",
              "color": {
                "b": 109,
                "g": 230,
                "r": 255,
                "textB": 0,
                "textG": 0,
                "textR": 0
              },
              "comment": "Can only consider hover effects if it happens when there is no Click happening (ClickCaptured == -1), or when the click started in the button without finishing (ClickCaptured == 1).\n\nCan't use in mobile device. On mobile, if the user drag the touch to the button and release on it, it is left in hover state."
            },
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "value": "SourisSurObjet"
                  },
                  "parameters": [
                    "Object",
                    "",
                    "",
                    ""
                  ]
                },
                {
                  "type": {
                    "value": "VarObjet"
                  },
                  "parameters": [
                    "Object",
                    "ClickCaptured",
                    "!=",
                    "0"
                  ]
                },
                {
                  "type": {
                    "inverted": true,
                    "value": "SystemInfo::IsMobile"
                  },
                  "parameters": []
                },
                {
                  "type": {
                    "value": "Button::InteractiveButton::PropertyENABLED"
                  },
                  "parameters": [
                    "Object",
                    "Behavior"
                  ]
                }
              ],
              "actions": [
                {
                  "type": {
                    "value": "SetReturnBoolean"
                  },
                  "parameters": [
                    "True"
                  ]
                }
              ]
            }
          ],
          "parameters": [
            {
              "description": "Object",
              "name": "Object",
              "supplementaryInformation": "Sprite",
              "type": "object"
            },
            {
              "description": "Behavior",
              "name": "Behavior",
              "supplementaryInformation": "Button::InteractiveButton",
              "type": "behavior"
            }
          ],
          "objectGroups": []
        },
        {
          "description": "The mouse/touch is held over the button",
          "fullName": "Is down",
          "functionType": "Condition",
          "name": "isDown",
          "sentence": "_PARAM0_ is pressed down",
          "events": [
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [],
              "actions": [
                {
                  "type": {
                    "value": "SetReturnBoolean"
                  },
                  "parameters": [
                    "False"
                  ]
                }
              ]
            },
            {
              "type": "BuiltinCommonInstructions::Comment",
              "color": {
                "b": 109,
                "g": 230,
                "r": 255,
                "textB": 0,
                "textG": 0,
                "textR": 0
              },
              "comment": "To consider the button down event properly, need to check ClickCaptured state to make sure there is a click started on the button. Otherwise, it would respond to a drag event passing by (cursor on object + mouse button is down)"
            },
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "value": "SourisSurObjet"
                  },
                  "parameters": [
                    "Object",
                    "",
                    "yes",
                    ""
                  ]
                },
                {
                  "type": {
                    "value": "SourisBouton"
                  },
                  "parameters": [
                    "",
                    "Left"
                  ]
                },
                {
                  "type": {
                    "value": "VarObjet"
                  },
                  "parameters": [
                    "Object",
                    "ClickCaptured",
                    "=",
                    "1"
                  ]
                },
                {
                  "type": {
                    "value": "Button::InteractiveButton::PropertyENABLED"
                  },
                  "parameters": [
                    "Object",
                    "Behavior"
                  ]
                }
              ],
              "actions": [
                {
                  "type": {
                    "value": "SetReturnBoolean"
                  },
                  "parameters": [
                    "True"
                  ]
                }
              ]
            }
          ],
          "parameters": [
            {
              "description": "Object",
              "name": "Object",
              "supplementaryInformation": "Sprite",
              "type": "object"
            },
            {
              "description": "Behavior",
              "name": "Behavior",
              "supplementaryInformation": "Button::InteractiveButton",
              "type": "behavior"
            }
          ],
          "objectGroups": []
        },
        {
          "description": "The button is enabled ",
          "fullName": "Is enabled",
          "functionType": "Condition",
          "name": "isEnabled",
          "sentence": "_PARAM0_ is enabled",
          "events": [
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "value": "Button::InteractiveButton::PropertyENABLED"
                  },
                  "parameters": [
                    "Object",
                    "Behavior"
                  ]
                }
              ],
              "actions": [
                {
                  "type": {
                    "value": "SetReturnBoolean"
                  },
                  "parameters": [
                    "True"
                  ]
                }
              ]
            },
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "inverted": true,
                    "value": "Button::InteractiveButton::PropertyENABLED"
                  },
                  "parameters": [
                    "Object",
                    "Behavior"
                  ]
                }
              ],
              "actions": [
                {
                  "type": {
                    "value": "SetReturnBoolean"
                  },
                  "parameters": [
                    "False"
                  ]
                }
              ]
            }
          ],
          "parameters": [
            {
              "description": "Object",
              "name": "Object",
              "supplementaryInformation": "Sprite",
              "type": "object"
            },
            {
              "description": "Behavior",
              "name": "Behavior",
              "supplementaryInformation": "Button::InteractiveButton",
              "type": "behavior"
            }
          ],
          "objectGroups": []
        },
        {
          "description": "Enable the button",
          "fullName": "Enable button",
          "functionType": "Action",
          "name": "setEnable",
          "sentence": "Enable button _PARAM0_",
          "events": [
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [],
              "actions": [
                {
                  "type": {
                    "value": "Button::InteractiveButton::SetPropertyENABLED"
                  },
                  "parameters": [
                    "Object",
                    "Behavior",
                    "yes"
                  ]
                }
              ]
            }
          ],
          "parameters": [
            {
              "description": "Object",
              "name": "Object",
              "supplementaryInformation": "Sprite",
              "type": "object"
            },
            {
              "description": "Behavior",
              "name": "Behavior",
              "supplementaryInformation": "Button::InteractiveButton",
              "type": "behavior"
            }
          ],
          "objectGroups": []
        },
        {
          "description": "Disable the button",
          "fullName": "Disable button",
          "functionType": "Action",
          "name": "setDisable",
          "sentence": "Disable button _PARAM0_",
          "events": [
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [],
              "actions": [
                {
                  "type": {
                    "value": "Button::InteractiveButton::SetPropertyENABLED"
                  },
                  "parameters": [
                    "Object",
                    "Behavior",
                    "no"
                  ]
                }
              ]
            }
          ],
          "parameters": [
            {
              "description": "Object",
              "name": "Object",
              "supplementaryInformation": "Sprite",
              "type": "object"
            },
            {
              "description": "Behavior",
              "name": "Behavior",
              "supplementaryInformation": "Button::InteractiveButton",
              "type": "behavior"
            }
          ],
          "objectGroups": []
        },
        {
          "fullName": "",
          "functionType": "Action",
          "name": "doStepPostEvents",
          "sentence": "",
          "events": [
            {
              "type": "BuiltinCommonInstructions::Comment",
              "color": {
                "b": 109,
                "g": 230,
                "r": 255,
                "textB": 0,
                "textG": 0,
                "textR": 0
              },
              "comment": "If the mouse button is released during a captured click (0 or 1), set the state to no click captured (-1)"
            },
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "value": "VarObjet"
                  },
                  "parameters": [
                    "Object",
                    "ClickCaptured",
                    ">",
                    "-1"
                  ]
                },
                {
                  "type": {
                    "value": "MouseButtonReleased"
                  },
                  "parameters": [
                    "",
                    "Left"
                  ]
                },
                {
                  "type": {
                    "value": "Button::InteractiveButton::PropertyENABLED"
                  },
                  "parameters": [
                    "Object",
                    "Behavior"
                  ]
                }
              ],
              "actions": [
                {
                  "type": {
                    "value": "ModVarObjet"
                  },
                  "parameters": [
                    "Object",
                    "ClickCaptured",
                    "=",
                    "-1"
                  ]
                }
              ]
            }
          ],
          "parameters": [
            {
              "description": "Object",
              "name": "Object",
              "supplementaryInformation": "Sprite",
              "type": "object"
            },
            {
              "description": "Behavior",
              "name": "Behavior",
              "supplementaryInformation": "Button::InteractiveButton",
              "type": "behavior"
            }
          ],
          "objectGroups": []
        }
      ],
      "propertyDescriptors": [
        {
          "value": "up",
          "type": "String",
          "label": "Animation for idle state",
          "description": "",
          "group": "",
          "extraInformation": [],
          "hidden": false,
          "name": "ANIMATION_UP"
        },
        {
          "value": "over",
          "type": "String",
          "label": "Animation for mouse over state",
          "description": "",
          "group": "",
          "extraInformation": [],
          "hidden": false,
          "name": "ANIMATION_OVER"
        },
        {
          "value": "down",
          "type": "String",
          "label": "Animation for button down state",
          "description": "",
          "group": "",
          "extraInformation": [],
          "hidden": false,
          "name": "ANIMATION_DOWN"
        },
        {
          "value": "disabled",
          "type": "String",
          "label": "Animation for button disabled",
          "description": "",
          "group": "",
          "extraInformation": [],
          "hidden": false,
          "name": "ANIMATION_DISABLED"
        },
        {
          "value": "true",
          "type": "Boolean",
          "label": "Button is enabled",
          "description": "",
          "group": "",
          "extraInformation": [],
          "hidden": false,
          "name": "ENABLED"
        }
      ],
      "sharedPropertyDescriptors": []
    }
  ],
  "eventsBasedObjects": []
}