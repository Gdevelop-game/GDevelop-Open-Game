var gdjs;(function(r){let d;(function(u){const s=new r.Logger("Tilemap object");class o{constructor(e){this._instanceContainer=e,this._manager=new TileMapHelper.TileMapManager}static getManager(e){return e.tileMapCollisionMaskManager||(e.tileMapCollisionMaskManager=new o(e)),e.tileMapCollisionMaskManager}getOrLoadTileMap(e,t,i,n){this._manager.getOrLoadTileMap(this._loadTileMap.bind(this),e,t,i,pako,n)}getOrLoadTextureCache(e,t,i,n,l,a){this._manager.getOrLoadTextureCache(this._loadTileMap.bind(this),e,t,i,n,l,a)}_loadTileMap(e,t,i){this._instanceContainer.getGame().getJsonManager().loadJson(e,(n,l)=>{if(n){s.error("An error happened while loading a Tilemap JSON data:",n),i(null);return}const a=TileMapHelper.TileMapManager.identify(l);if(!a){i(null);return}a.kind==="tiled"&&t?this._instanceContainer.getGame().getJsonManager().loadJson(t,(p,T)=>{if(p){s.error("An error happened while loading Tileset JSON data:",p),i(null);return}const M=a.data,g=T;g.firstgid=M.tilesets[0].firstgid,M.tilesets=[g],i(a)}):i(a)})}}u.TileMapRuntimeManager=o})(d=r.TileMap||(r.TileMap={}))})(gdjs||(gdjs={}));
//# sourceMappingURL=TileMapRuntimeManager.js.map
